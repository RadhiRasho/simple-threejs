/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 -t public/koifish.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'PlaneAction' | 'fishAction'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    fish: THREE.Mesh
  }
  materials: {}
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/koifish.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Plane" geometry={nodes.Plane.geometry} material={nodes.Plane.material} position={[1.686, 12.954, -12.366]} rotation={[0, 0.047, -Math.PI / 2]} scale={[6.085, 3.356, 17.66]}>
          <mesh name="fish" geometry={nodes.fish.geometry} material={nodes.fish.material} position={[0.116, 0.282, 0.156]} rotation={[0.124, 0.116, 1.578]} scale={[0.147, 0.077, 0.02]} />
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/koifish.glb')
